@page "/categories"
@using ZNSTLibrary.Data.Models
@using ZNSTLibrary.Services.Categories
@attribute [Authorize(Roles = "Administrator,Instructor,Student")]

<PageTitle>Categories</PageTitle>


@inject IDialogService DialogService
@inject ILocalStorageService _LocalStorage
@inject ICategoriesService _categoriesService


@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
        Add Category
    </MudButton>
    <MudTable Items="@categories">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Course Categories</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Name</MudTd>
            <MudTd DataLabel="Sign">@context.Description</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }"
                           RowsPerPageString="@rowsPerPageString"
                           InfoFormat="@infoFormat"
                           AllItemsText="@allItemsText"
                           HorizontalAlignment="@horizontalAlignment"
                           HideRowsPerPage="@hideRowsPerPage"
                           HidePageNumber="@hidePageNumber"
                           HidePagination="@hidePagination" />
        </PagerContent>
    </MudTable>
}

@code {
    private List<Category> categories = new List<Category>();
    private HorizontalAlignment horizontalAlignment = HorizontalAlignment.Right;
    private bool hidePageNumber;
    private bool hidePagination;
    private bool hideRowsPerPage;
    private string rowsPerPageString = "Rows per page:";
    private string infoFormat = "{first_item}-{last_item} of {all_items}";
    private string allItemsText = "All";
    private string userID = null!;

    protected override async Task OnInitializedAsync()
    {

        var res = await _categoriesService.GetCategories();
        if (res != null)
        {
            categories = res!;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var uID = await _LocalStorage.GetItemAsync<string>("__id");
            userID = uID!;
        }
        
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, };
        DialogService.Show<AddCategory>("Add Category", options);
    }
}